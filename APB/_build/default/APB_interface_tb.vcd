$date
	Fri Jul 25 20:31:41 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module APB_interface_tb $end
$var wire 1 ! pslverr $end
$var wire 8 " prdata [7:0] $end
$var wire 16 # payload [15:0] $end
$var wire 5 $ data_size [4:0] $end
$var parameter 32 % DATA_SIZE_ADDRESS $end
$var parameter 32 & ERR_STATUS_ADDRESS $end
$var parameter 32 ' PAYLOAD_ADDRESS $end
$var reg 2 ( err_status [1:0] $end
$var reg 3 ) paddr [2:0] $end
$var reg 1 * pclk $end
$var reg 1 + penable $end
$var reg 1 , pready $end
$var reg 1 - preset_n $end
$var reg 1 . psel_x $end
$var reg 8 / pwdata [7:0] $end
$var reg 1 0 pwrite $end
$scope module APB_dut $end
$var wire 2 1 err_status [1:0] $end
$var wire 3 2 paddr [2:0] $end
$var wire 1 * pclk $end
$var wire 1 + penable $end
$var wire 1 , pready $end
$var wire 1 - preset_n $end
$var wire 1 . psel_x $end
$var wire 8 3 pwdata [7:0] $end
$var wire 1 0 pwrite $end
$var wire 2 4 write_select [1:0] $end
$var wire 2 5 read_select [1:0] $end
$var wire 1 ! pslverr $end
$var wire 8 6 prdata [7:0] $end
$var wire 8 7 payload_1 [7:0] $end
$var wire 8 8 payload_0 [7:0] $end
$var wire 16 9 payload [15:0] $end
$var wire 5 : data_size [4:0] $end
$scope module mapping_unit $end
$var wire 3 ; paddr [2:0] $end
$var wire 1 . psel_x $end
$var wire 1 0 pwrite $end
$var parameter 32 < DATA_SIZE_ADDRESS $end
$var parameter 32 = ERR_STATUS_ADDRESS $end
$var parameter 32 > PAYLOAD_ADDRESS $end
$var reg 1 ! pslverr $end
$var reg 2 ? read_select [1:0] $end
$var reg 2 @ write_select [1:0] $end
$upscope $end
$scope module read_unit $end
$var wire 2 A err_status [1:0] $end
$var wire 1 * pclk $end
$var wire 1 + penable $end
$var wire 1 , pready $end
$var wire 1 - preset_n $end
$var wire 1 . psel_x $end
$var wire 1 0 pwrite $end
$var wire 2 B read_select [1:0] $end
$var wire 8 C payload_1 [7:0] $end
$var wire 8 D payload_0 [7:0] $end
$var wire 5 E data_size [4:0] $end
$var reg 8 F prdata [7:0] $end
$upscope $end
$scope module write_unit $end
$var wire 1 * pclk $end
$var wire 1 + penable $end
$var wire 1 , pready $end
$var wire 1 - preset_n $end
$var wire 1 . psel_x $end
$var wire 8 G pwdata [7:0] $end
$var wire 1 0 pwrite $end
$var wire 2 H write_select [1:0] $end
$var reg 5 I data_size [4:0] $end
$var reg 8 J payload_0 [7:0] $end
$var reg 8 K payload_1 [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10 >
b1 =
b100 <
b10 '
b1 &
b100 %
$end
#0
$dumpvars
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
x0
bx /
x.
x-
x,
x+
0*
bx )
bx (
bx $
bx #
bx "
0!
$end
#10000
b0 (
b0 1
b0 A
b0 /
b0 3
b0 G
b0 )
b0 2
b0 ;
00
0,
0+
1-
0.
1*
#20000
0*
#30000
1*
#40000
0*
#50000
b11 5
b11 ?
b11 B
b10 4
b10 @
b10 H
b1100 /
b1100 3
b1100 G
b100 )
b100 2
b100 ;
10
1.
1*
#60000
0*
#70000
1+
1*
#80000
0*
#90000
b1100 $
b1100 :
b1100 E
b1100 I
1,
1*
#100000
0*
#110000
bx 5
bx ?
bx B
bx 4
bx @
bx H
b0 )
b0 2
b0 ;
0,
0+
0.
1*
#120000
0*
#130000
1*
#140000
0*
#150000
b11 5
b11 ?
b11 B
b10 4
b10 @
b10 H
b100 )
b100 2
b100 ;
00
1.
1*
#160000
0*
#170000
1+
1*
#180000
0*
#190000
b1100 "
b1100 6
b1100 F
1,
1*
#200000
0*
#210000
bx 5
bx ?
bx B
bx 4
bx @
bx H
b0 )
b0 2
b0 ;
0,
0+
0.
1*
#220000
0*
#230000
b1 5
b1 ?
b1 B
b0 4
b0 @
b0 H
b110011 /
b110011 3
b110011 G
b10 )
b10 2
b10 ;
10
1.
1*
#240000
0*
#250000
bx00110011 #
bx00110011 9
b110011 8
b110011 D
b110011 J
1,
1+
1*
#260000
0*
#270000
1*
#280000
0*
#290000
bx 5
bx ?
bx B
bx 4
bx @
bx H
b0 )
b0 2
b0 ;
0,
0+
0.
1*
#300000
0*
#310000
b10 5
b10 ?
b10 B
b1 4
b1 @
b1 H
b11 /
b11 3
b11 G
b11 )
b11 2
b11 ;
1.
1*
#320000
0*
#330000
b1100110011 #
b1100110011 9
b11 7
b11 C
b11 K
1,
1+
1*
#340000
0*
#350000
bx 5
bx ?
bx B
bx 4
bx @
bx H
b0 )
b0 2
b0 ;
0,
0+
0.
1*
#360000
0*
#370000
b11 5
b11 ?
b11 B
b10 4
b10 @
b10 H
b100 )
b100 2
b100 ;
00
1.
1*
#380000
b0 #
b0 9
b0 $
b0 :
b0 E
b0 I
b0 7
b0 C
b0 K
b0 8
b0 D
b0 J
b0 "
b0 6
b0 F
0-
0*
#390000
1*
#400000
0*
#410000
1*
#420000
0*
#430000
1*
